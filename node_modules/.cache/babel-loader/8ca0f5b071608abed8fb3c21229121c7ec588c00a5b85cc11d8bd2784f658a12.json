{"ast":null,"code":"var _jsxFileName = \"/Users/clairesheng/GitHub/Math-Chess-Web/src/components/CheckerBoard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = _ref => {\n  let {\n    isOccupied,\n    isHighlighted,\n    onClick\n  } = _ref;\n  let className = 'cell';\n  if (isOccupied) className += ' occupied';\n  if (isHighlighted) className += ' highlighted';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n_c = Cell;\nconst ChineseCheckersBoard = () => {\n  _s();\n  const [board, setBoard] = React.useState([]);\n  React.useEffect(() => {\n    const initialBoard = [[0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0]];\n    setBoard(initialBoard);\n  }, []);\n  const handleCellClick = (row, col) => {\n    console.log(`Clicked cell at row ${row}, col ${col}`);\n    // You can perform logic here to handle the cell click event\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chinese-checkers-board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        isOccupied: cell !== 0,\n        isHighlighted: false,\n        onClick: () => handleCellClick(rowIndex, colIndex)\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ChineseCheckersBoard, \"jMNr9OUCnGXRnWCrgJjYZl+B82M=\");\n_c2 = ChineseCheckersBoard;\nexport default ChineseCheckersBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"ChineseCheckersBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Cell","_ref","isOccupied","isHighlighted","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChineseCheckersBoard","_s","board","setBoard","useState","useEffect","initialBoard","handleCellClick","row","col","console","log","children","map","rowIndex","cell","colIndex","_c2","$RefreshReg$"],"sources":["/Users/clairesheng/GitHub/Math-Chess-Web/src/components/CheckerBoard.tsx"],"sourcesContent":["import React from 'react';\n\ntype CellProps = {\n    isOccupied: boolean;\n    isHighlighted: boolean;\n    onClick: () => void;\n};\n\nconst Cell: React.FC<CellProps> = ({ isOccupied, isHighlighted, onClick }) => {\n    let className = 'cell';\n    if (isOccupied) className += ' occupied';\n    if (isHighlighted) className += ' highlighted';\n\n    return <div className={className} onClick={onClick} />;\n};\n\nconst ChineseCheckersBoard: React.FC = () => {\n    const [board, setBoard] = React.useState<(0 | 1 | 2)[][]>([]);\n\n    React.useEffect(() => {\n        const initialBoard = [\n            [0, 0, 1, 1, 1, 0, 0],\n            [0, 0, 1, 1, 1, 0, 0],\n            [1, 1, 1, 1, 1, 1, 1],\n            [1, 1, 1, 2, 1, 1, 1],\n            [1, 1, 1, 1, 1, 1, 1],\n            [0, 0, 1, 1, 1, 0, 0],\n            [0, 0, 1, 1, 1, 0, 0],\n        ];\n        setBoard(initialBoard);\n    }, []);\n\n    const handleCellClick = (row: number, col: number) => {\n        console.log(`Clicked cell at row ${row}, col ${col}`);\n        // You can perform logic here to handle the cell click event\n    };\n\n    return (\n        <div className=\"chinese-checkers-board\">\n            {board.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"row\">\n                    {row.map((cell, colIndex) => (\n                        <Cell\n                            key={colIndex}\n                            isOccupied={cell !== 0}\n                            isHighlighted={false}\n                            onClick={() => handleCellClick(rowIndex, colIndex)}\n                        />\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ChineseCheckersBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}