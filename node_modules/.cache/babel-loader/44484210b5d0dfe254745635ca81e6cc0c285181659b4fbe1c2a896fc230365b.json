{"ast":null,"code":"var _jsxFileName = \"/Users/clairesheng/GitHub/Math-Chess-Web/src/components/ChineseCheckerBoard.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChineseCheckerBoard = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 400 400\",\n    width: \"400\",\n    height: \"400\",\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: \"rotate(45 200 200)\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"rotate(-45 200 200)\",\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: 0,\n          y: 0,\n          width: 400,\n          height: 400,\n          fill: \"#f5f5f5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), [0, 1, 2, 3, 4, 5, 6, 7, 8].map(rowIndex => /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(${rowIndex * 30}, ${rowIndex * 30})`,\n          children: [0, 1, 2, 3, 4, 5, 6, 7, 8].map(colIndex => /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: colIndex * 30,\n            cy: 0,\n            r: 15,\n            fill: \"none\",\n            stroke: \"#000000\",\n            strokeWidth: \"1\"\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = ChineseCheckerBoard;\nexport default ChineseCheckerBoard;\nvar _c;\n$RefreshReg$(_c, \"ChineseCheckerBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChineseCheckerBoard","xmlns","viewBox","width","height","children","transform","x","y","fill","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","colIndex","cx","cy","r","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/clairesheng/GitHub/Math-Chess-Web/src/components/ChineseCheckerBoard.tsx"],"sourcesContent":["import React from \"react\";\n\nconst ChineseCheckerBoard: React.FC = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\" width=\"400\" height=\"400\">\n            <g transform=\"rotate(45 200 200)\">\n                <g transform=\"rotate(-45 200 200)\">\n                    {/* Board Background */}\n                    <rect x={0} y={0} width={400} height={400} fill=\"#f5f5f5\" />\n\n                    {/* Rows */}\n                    {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((rowIndex: number) => (\n                        <g key={rowIndex} transform={`translate(${rowIndex * 30}, ${rowIndex * 30})`}>\n                            {/* Cells */}\n                            {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((colIndex: number) => (\n                                <circle key={colIndex} cx={colIndex * 30} cy={0} r={15} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1\" />\n                            ))}\n                        </g>\n                    ))}\n                </g>\n            </g>\n        </svg>\n    );\n};\n\nexport default ChineseCheckerBoard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAA6B,GAAGA,CAAA,KAAM;EACxC,oBACID,OAAA;IAAKE,KAAK,EAAC,4BAA4B;IAACC,OAAO,EAAC,aAAa;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAAAC,QAAA,eAClFN,OAAA;MAAGO,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC7BN,OAAA;QAAGO,SAAS,EAAC,qBAAqB;QAAAD,QAAA,gBAE9BN,OAAA;UAAMQ,CAAC,EAAE,CAAE;UAACC,CAAC,EAAE,CAAE;UAACL,KAAK,EAAE,GAAI;UAACC,MAAM,EAAE,GAAI;UAACK,IAAI,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAG3D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,QAAgB,iBAC9ChB,OAAA;UAAkBO,SAAS,EAAG,aAAYS,QAAQ,GAAG,EAAG,KAAIA,QAAQ,GAAG,EAAG,GAAG;UAAAV,QAAA,EAExE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACS,GAAG,CAAEE,QAAgB,iBAC9CjB,OAAA;YAAuBkB,EAAE,EAAED,QAAQ,GAAG,EAAG;YAACE,EAAE,EAAE,CAAE;YAACC,CAAC,EAAE,EAAG;YAACV,IAAI,EAAC,MAAM;YAACW,MAAM,EAAC,SAAS;YAACC,WAAW,EAAC;UAAG,GAAvFL,QAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiF,CACzG;QAAC,GAJEE,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACS,EAAA,GArBItB,mBAA6B;AAuBnC,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}