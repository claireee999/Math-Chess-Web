{"ast":null,"code":"var _jsxFileName = \"/Users/clairesheng/GitHub/Math-Chess-Web/src/components/ChineseCheckerBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChineseCheckerBoard = () => {\n  _s();\n  const board = useRef(new Array(17));\n  const player1 = [\"#FED7E2\", \"#FBB6CE\"];\n  const player2 = [\"#C4F1F9\", \"#9DECF9\"];\n  const empty = \"#FFFFFF\";\n  const background = \"#E9D8FD\";\n  const drawPiece = (x, y, color) => {\n    const pieceStyles = {\n      1: {\n        backgroundColor: player1[0]\n      },\n      2: {\n        backgroundColor: player2[0]\n      },\n      0: {\n        backgroundColor: empty\n      }\n    };\n    const style = {\n      position: \"absolute\",\n      top: `${y * 50}px`,\n      left: `${x * 50}px`,\n      width: \"40px\",\n      height: \"40px\",\n      borderRadius: \"50%\",\n      ...pieceStyles[color]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  };\n  useEffect(() => {\n    for (let i = 0; i < 17; i++) {\n      board.current[i] = new Array(17).fill(0);\n    }\n    for (let i = 0; i < 17; i++) {\n      for (let j = 0; j < 17; j++) {\n        if ((i + j) % 2 === 1 || Math.abs(i - 8) + Math.abs(j - 8) > 8) {\n          board.current[i][j] = -1;\n        } else if (i < 4) {\n          board.current[i][j] = 1;\n        } else if (i > 12) {\n          board.current[i][j] = 2;\n        }\n      }\n    }\n  }, []);\n  console.log(board);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100vw\",\n      height: \"100vh\",\n      backgroundColor: background\n    },\n    children: board.current.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: row.map((value, colIndex) => drawPiece(rowIndex, colIndex, value))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ChineseCheckerBoard, \"GKLKqNz+mDwra/BV9VG/avguuIY=\");\n_c = ChineseCheckerBoard;\nexport default ChineseCheckerBoard;\nvar _c;\n$RefreshReg$(_c, \"ChineseCheckerBoard\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ChineseCheckerBoard","_s","board","Array","player1","player2","empty","background","drawPiece","x","y","color","pieceStyles","backgroundColor","style","position","top","left","width","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","i","current","fill","j","Math","abs","console","log","children","map","row","rowIndex","display","value","colIndex","_c","$RefreshReg$"],"sources":["/Users/clairesheng/GitHub/Math-Chess-Web/src/components/ChineseCheckerBoard.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst ChineseCheckerBoard: React.FC = () => {\n    const board = useRef<number[][]>(new Array(17));\n\n    const player1: string[] = [\"#FED7E2\", \"#FBB6CE\"];\n    const player2: string[] = [\"#C4F1F9\", \"#9DECF9\"];\n    const empty: string = \"#FFFFFF\";\n    const background: string = \"#E9D8FD\";\n\n    const drawPiece = (x: number, y: number, color: number) => {\n        const pieceStyles: { [key: number]: React.CSSProperties } = {\n            1: { backgroundColor: player1[0] },\n            2: { backgroundColor: player2[0] },\n            0: { backgroundColor: empty },\n        };\n\n        const style: React.CSSProperties = {\n            position: \"absolute\",\n            top: `${y * 50}px`,\n            left: `${x * 50}px`,\n            width: \"40px\",\n            height: \"40px\",\n            borderRadius: \"50%\",\n            ...pieceStyles[color],\n        };\n\n        return <div style={style} />;\n    };\n\n    useEffect(() => {\n        for (let i = 0; i < 17; i++) {\n            board.current[i] = new Array(17).fill(0);\n        }\n\n        for (let i = 0; i < 17; i++) {\n            for (let j = 0; j < 17; j++) {\n                if ((i + j) % 2 === 1 || Math.abs(i - 8) + Math.abs(j - 8) > 8) {\n                    board.current[i][j] = -1;\n                } else if (i < 4) {\n                    board.current[i][j] = 1;\n                } else if (i > 12) {\n                    board.current[i][j] = 2;\n                }\n            }\n        }\n    }, []);\n    console.log(board);\n\n    return (\n        <div style={{ position: \"relative\", width: \"100vw\", height: \"100vh\", backgroundColor: background}}>\n            {board.current.map((row, rowIndex) => (\n                <div key={rowIndex} style={{ display: 'flex' }}>\n                    {row.map((value, colIndex) => drawPiece(rowIndex, colIndex, value))}\n                </div>\n            ))}\n\n        </div>\n    );\n};\n\nexport default ChineseCheckerBoard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}