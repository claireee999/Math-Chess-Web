{"ast":null,"code":"var _jsxFileName = \"/Users/clairesheng/GitHub/Math-Chess-Web/src/components/ChineseCheckerBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChineseCheckerBoard = () => {\n  _s();\n  const board = useRef(new Array(17));\n  const player1 = [\"#FED7E2\", \"#FBB6CE\"];\n  const player2 = [\"#C4F1F9\", \"#9DECF9\"];\n  const empty = \"#FFFFFF\";\n  const background = \"#E9D8FD\";\n  const drawPiece = (x, y, color) => {\n    const style = {\n      position: \"absolute\",\n      top: `${y * 50}px`,\n      left: `${x * 50}px`,\n      width: \"40px\",\n      height: \"40px\",\n      borderRadius: \"50%\",\n      backgroundColor: color\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  };\n  useEffect(() => {\n    for (let i = 0; i < 17; i++) {\n      board.current[i] = new Array(17).fill(0);\n    }\n    for (let i = 0; i < 17; i++) {\n      for (let j = 0; j < 17; j++) {\n        if ((i + j) % 2 === 1 || Math.abs(i - 8) + Math.abs(j - 8) > 8) {\n          board.current[i][j] = -1;\n        } else if (i < 4) {\n          board.current[i][j] = 1;\n        } else if (i > 12) {\n          board.current[i][j] = 2;\n        }\n      }\n    }\n  }, []);\n  //console.log(board);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100vw\",\n      height: \"100vh\",\n      backgroundColor: background\n    },\n    children: [drawPiece(2, 3, \"#ff6b6b\"), \" \", drawPiece(5, 6, \"#6b88ff\"), \" \", board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: row.map((value, colIndex) => drawPiece(rowIndex, colIndex, value))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ChineseCheckerBoard, \"GKLKqNz+mDwra/BV9VG/avguuIY=\");\n_c = ChineseCheckerBoard;\nexport default ChineseCheckerBoard;\nvar _c;\n$RefreshReg$(_c, \"ChineseCheckerBoard\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ChineseCheckerBoard","_s","board","Array","player1","player2","empty","background","drawPiece","x","y","color","style","position","top","left","width","height","borderRadius","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","i","current","fill","j","Math","abs","children","map","row","rowIndex","display","value","colIndex","_c","$RefreshReg$"],"sources":["/Users/clairesheng/GitHub/Math-Chess-Web/src/components/ChineseCheckerBoard.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst ChineseCheckerBoard = () => {\n    const board = useRef<number[][]>(new Array(17));\n\n    const player1 = [\"#FED7E2\", \"#FBB6CE\"];\n    const player2 = [\"#C4F1F9\", \"#9DECF9\"];\n    const empty = \"#FFFFFF\";\n    const background = \"#E9D8FD\";\n    const drawPiece = (x: number, y: number, color: string) => {\n        const style: React.CSSProperties = {\n            position: \"absolute\",\n            top: `${y * 50}px`,\n            left: `${x * 50}px`,\n            width: \"40px\",\n            height: \"40px\",\n            borderRadius: \"50%\",\n            backgroundColor: color,\n        };\n\n        return <div style={style} />;\n    };\n\n    useEffect(() => {\n        for (let i = 0; i < 17; i++) {\n            board.current[i] = new Array(17).fill(0);\n        }\n\n        for (let i = 0; i < 17; i++) {\n            for (let j = 0; j < 17; j++) {\n                if ((i + j) % 2 === 1 || Math.abs(i - 8) + Math.abs(j - 8) > 8) {\n                    board.current[i][j] = -1;\n                } else if (i < 4) {\n                    board.current[i][j] = 1;\n                } else if (i > 12) {\n                    board.current[i][j] = 2;\n                }\n            }\n        }\n    }, []);\n    //console.log(board);\n\n\n    return (\n        <div style={{ position: \"relative\", width: \"100vw\", height: \"100vh\", backgroundColor: background}}>\n            {/* Draw pieces at specific coordinates */}\n            {drawPiece(2, 3, \"#ff6b6b\")} {/* Red piece at (2, 3) */}\n            {drawPiece(5, 6, \"#6b88ff\")} {/* Blue piece at (5, 6) */}\n            {/* Add more drawPiece calls for other pieces */}\n            {board.map((row, rowIndex) => (\n            <div key={rowIndex} style={{ display: 'flex' }}>\n                {row.map((value, colIndex) => drawPiece(rowIndex, colIndex, value))}\n            </div>\n        ))}\n        </div>\n    );\n};\n\nexport default ChineseCheckerBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,KAAK,GAAGL,MAAM,CAAa,IAAIM,KAAK,CAAC,EAAE,CAAC,CAAC;EAE/C,MAAMC,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;EACtC,MAAMC,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;EACtC,MAAMC,KAAK,GAAG,SAAS;EACvB,MAAMC,UAAU,GAAG,SAAS;EAC5B,MAAMC,SAAS,GAAGA,CAACC,CAAS,EAAEC,CAAS,EAAEC,KAAa,KAAK;IACvD,MAAMC,KAA0B,GAAG;MAC/BC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAG,GAAEJ,CAAC,GAAG,EAAG,IAAG;MAClBK,IAAI,EAAG,GAAEN,CAAC,GAAG,EAAG,IAAG;MACnBO,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAER;IACrB,CAAC;IAED,oBAAOZ,OAAA;MAAKa,KAAK,EAAEA;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChC,CAAC;EAED3B,SAAS,CAAC,MAAM;IACZ,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzBtB,KAAK,CAACuB,OAAO,CAACD,CAAC,CAAC,GAAG,IAAIrB,KAAK,CAAC,EAAE,CAAC,CAACuB,IAAI,CAAC,CAAC,CAAC;IAC5C;IAEA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QACzB,IAAI,CAACH,CAAC,GAAGG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAIC,IAAI,CAACC,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACF,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;UAC5DzB,KAAK,CAACuB,OAAO,CAACD,CAAC,CAAC,CAACG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,MAAM,IAAIH,CAAC,GAAG,CAAC,EAAE;UACdtB,KAAK,CAACuB,OAAO,CAACD,CAAC,CAAC,CAACG,CAAC,CAAC,GAAG,CAAC;QAC3B,CAAC,MAAM,IAAIH,CAAC,GAAG,EAAE,EAAE;UACftB,KAAK,CAACuB,OAAO,CAACD,CAAC,CAAC,CAACG,CAAC,CAAC,GAAG,CAAC;QAC3B;MACJ;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;;EAGA,oBACI5B,OAAA;IAAKa,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEG,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEE,eAAe,EAAEZ;IAAU,CAAE;IAAAuB,QAAA,GAE7FtB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAAC,GAAC,EAC5BA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAAC,GAAC,EAE5BN,KAAK,CAAC6B,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACzBlC,OAAA;MAAoBa,KAAK,EAAE;QAAEsB,OAAO,EAAE;MAAO,CAAE;MAAAJ,QAAA,EAC1CE,GAAG,CAACD,GAAG,CAAC,CAACI,KAAK,EAAEC,QAAQ,KAAK5B,SAAS,CAACyB,QAAQ,EAAEG,QAAQ,EAAED,KAAK,CAAC;IAAC,GAD7DF,QAAQ;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAACtB,EAAA,CAtDID,mBAAmB;AAAAqC,EAAA,GAAnBrC,mBAAmB;AAwDzB,eAAeA,mBAAmB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}